<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python x Excel</title>
      <link href="/2022/05/07/Ptyhon%20x%20Excel/"/>
      <url>/2022/05/07/Ptyhon%20x%20Excel/</url>
      
        <content type="html"><![CDATA[<blockquote><p>You can always refer to this LinkedIn Learning Video <a href="https://www.linkedin.com/learning/using-python-with-excel">Using Pythion with Excel</a>.</p></blockquote><h1 id="Install-Python-Interpreter"><a href="#Install-Python-Interpreter" class="headerlink" title="Install Python Interpreter"></a>Install Python Interpreter</h1><p>&lt;5 minutes</p><p>Interpreter in computer are necessary in every programming, like it’s name, it “<em>translate</em>“ our human readable code into 0 and 1 computer readable “<em>language</em>“. </p><ol><li>Download Python interpreter from <a href="https://www.python.org/downloads/">python.org</a>, for this case 3.10.4 is the newest case.</li></ol><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/pythonExcel/pythonDownload.png" alt="Python Download"></p><ol start="2"><li>Run .exe file, use default download options.</li><li>You need a Python IDE (Integrated Development Environment) or a code editor to write code. Recommended using IDE. <ul><li>Windows OS: JetBrains PyCharm, VS Code </li><li>MacOS: JetBrains PyCharm, VS Code, Komodo, Atom</li></ul></li></ol><h1 id="Python-“Pandas”-Basic"><a href="#Python-“Pandas”-Basic" class="headerlink" title="Python “Pandas” Basic"></a>Python “Pandas” Basic</h1><p><strong>Pandas library</strong> - primarily used in data science, provide Python function, statement that make Excel sorting, examining and modifying very easy. </p><blockquote><p>You can always refer to <a href="https://pandas.pydata.org/docs/reference/index.html">Pandas Official API Document</a>, and <a href="https://pandas.pydata.org/docs/user_guide/index.html">Pandas Official User Guide</a>.</p></blockquote><h2 id="Install-Pandas"><a href="#Install-Pandas" class="headerlink" title="Install Pandas"></a>Install Pandas</h2><ol><li>Open command prompt: <ol><li>press “Windows <i class='fab fa-windows fa-lg'>.</i>“ </li><li>Search “cmd” and press “Enter”</li></ol></li><li>Install Python Pandas: in command prompt type <code>py -m pip install pandas </code> </li><li>Import Pandas: in command prompt  <code>py</code>, then <code>import pandas</code></li></ol><h2 id="Import-“Pandas”"><a href="#Import-“Pandas”" class="headerlink" title="Import “Pandas”"></a>Import “Pandas”</h2><p>Import Pandas library that we can use it’s function and statement. For example the one we used next step <code>pd.read_csv</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> openpyx1.workbook <span class="keyword">import</span> Workbook </span><br></pre></td></tr></table></figure><h2 id="Loading-and-saving-data"><a href="#Loading-and-saving-data" class="headerlink" title="Loading and saving data"></a>Loading and saving data</h2><p>Lode excel and txt data into Python data frame to be able to work on it. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_excel = pd.read_excel(<span class="string">&#x27;regions.xlsx&#x27;</span>)<span class="comment"># upload Excel file; </span></span><br><span class="line">df_csv = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)    <span class="comment"># upload csv file; Use &quot;header=None&quot; syntax if the datasheet has no header</span></span><br><span class="line">df_txt = pd.read_csv(<span class="string">&#x27;data.txt&#x27;</span>, delimiter=<span class="string">&#x27;\t&#x27;</span>)<span class="comment"># upload text file; Use &quot;delimiter=&#x27;\t&quot; syntax when loading txt file </span></span><br></pre></td></tr></table></figure><blockquote><ul><li><code>df</code> short for Data Frame</li><li>Use <code>.read_csv</code> for both <code>.csv</code> and <code>.txt</code> file, because <code>.csv</code> and <code>.txt</code> are very similar in terms how they column their data.</li></ul></blockquote><p>Save as the modified file into a new Excel file. <strong>The saving step will be omitted in subsequent presentations.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_csv.to.excel(&#x27;modified.xlsx&#x27;)</span><br></pre></td></tr></table></figure><h1 id="Python-“Pandas”-in-practices"><a href="#Python-“Pandas”-in-practices" class="headerlink" title="Python “Pandas” in practices"></a>Python “Pandas” in practices</h1><h2 id="Add-header-for-data-sheet"><a href="#Add-header-for-data-sheet" class="headerlink" title="Add header for data sheet"></a>Add header for data sheet</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_csv = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)<span class="comment"># load csv file</span></span><br><span class="line">df_csv.columns = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Address&#x27;</span>,<span class="string">&#x27;City&#x27;</span>,<span class="string">&#x27;State&#x27;</span>,<span class="string">&#x27;Postcode&#x27;</span>] <span class="comment"># defien the name for each columns</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/pythonExcel/addHeaders.png" alt="addHeader"></p><h2 id="View-number-of-column-selectively"><a href="#View-number-of-column-selectively" class="headerlink" title="View number of column selectively"></a>View number of column selectively</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)<span class="comment"># load csv file</span></span><br><span class="line">df_csv.columns = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Address&#x27;</span>,<span class="string">&#x27;City&#x27;</span>,<span class="string">&#x27;State&#x27;</span>,<span class="string">&#x27;Postcode&#x27;</span>]</span><br><span class="line">wanted_values = df[[<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Post Code&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># or </span></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)<span class="comment"># load csv file</span></span><br><span class="line">df_csv.columns = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Address&#x27;</span>,<span class="string">&#x27;City&#x27;</span>,<span class="string">&#x27;State&#x27;</span>,<span class="string">&#x27;Postcode&#x27;</span>]</span><br><span class="line">df.drop = [<span class="string">&#x27;Address&#x27;</span>,<span class="string">&#x27;City&#x27;</span>,<span class="string">&#x27;State&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li><code>wanted_values</code> - select the columns <strong>want</strong> to show </li><li><code>df.drop</code> - select the columns <strong>don’t want</strong> to show</li></ul><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/pythonExcel/lessColumn.png" alt="addHeader"></p><h2 id="Filter-data"><a href="#Filter-data" class="headerlink" title="Filter data"></a>Filter data</h2><p>This case we want to filter the data with First name <em>Stephen</em> who live in <em>SomeTown</em>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)<span class="comment"># load csv file</span></span><br><span class="line">df_csv.columns = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Address&#x27;</span>,<span class="string">&#x27;City&#x27;</span>,<span class="string">&#x27;State&#x27;</span>,<span class="string">&#x27;Postcode&#x27;</span>,<span class="string">&#x27;Income&#x27;</span>]</span><br><span class="line">df_filter = df.loc[(df[<span class="string">&#x27;City&#x27;</span>] == <span class="string">&#x27;SomeTown&#x27;</span>) &amp; (df[<span class="string">&#x27;First&#x27;</span>] == <span class="string">&#x27;Stephen&#x27;</span>)]</span><br></pre></td></tr></table></figure><p>Filter judgment has tow part </p><ul><li><p><code>(df[&#39;City&#39;] == &#39;SomeTown&#39;)</code> - find all ‘SomeTown’ in ‘City’ column </p></li><li><p><code>(df[&#39;First&#39;] == &#39;Stephen&#39;)</code> - find all ‘Stephen’ in ‘First’ column</p></li></ul><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/pythonExcel/filter.png" alt="filter"></p><h2 id="Apply-Logical-expression-on-data"><a href="#Apply-Logical-expression-on-data" class="headerlink" title="Apply Logical expression on data"></a>Apply Logical expression on data</h2><p>Apply filter using one line of code of <code>if()...else...</code> function, and store output in a new named column. </p><blockquote><p>To do the same thing, Microsoft Excel requre more effort, time and understand. </p><p>You need select “Sort and filter” –&gt; “customer sort” –&gt; select data range –&gt; select output range –&gt; define logical filter …</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)<span class="comment"># load csv file</span></span><br><span class="line">df_csv.columns = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Income&#x27;</span>]</span><br><span class="line">df[<span class="string">&#x27;Tax %&#x27;</span>] = df[<span class="string">&#x27;Income&#x27;</span>].apply(<span class="keyword">lambda</span> x: <span class="number">.15</span> <span class="keyword">if</span> <span class="number">10000</span>&lt;x&lt;<span class="number">40000</span> <span class="keyword">else</span> <span class="number">.2</span> <span class="number">40001</span>&lt;x&lt;<span class="number">80000</span> <span class="keyword">else</span> <span class="number">.25</span>)</span><br></pre></td></tr></table></figure><ul><li><p>df[‘Tax %’]&#96; - create a new column call ‘Tax %’, and store calculate value for each people&#x2F;unit.</p></li><li><p><code>df[&#39;Income&#39;].apply(...)</code> - with ‘Income’, apply following function …</p><ul><li><p><code>lambda x</code> - x represent different ‘Income’ for each people&#x2F;unit</p></li><li><p><code>.15 if 10000&lt;x&lt;40000</code> - output 15% if ‘Income’ is between 10000 ~ 40000 </p></li><li><p><code>else .2 40000&lt;x&lt;80000</code> - output 20% if ‘Income’ is between 40001 ~ 80000 </p></li><li><p><code>else .25</code> - output 25% beyond 80000</p><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/pythonExcel/logicalEx.png" alt="logicalEx"></p></li></ul></li></ul><h2 id="Calculate-data"><a href="#Calculate-data" class="headerlink" title="Calculate data"></a>Calculate data</h2><p>Simple calculation, one column multiple other column and create a new column to save the output. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)<span class="comment"># load csv file</span></span><br><span class="line">df_csv.columns = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Income&#x27;</span>]</span><br><span class="line">df[<span class="string">&#x27;Taxes Owed&#x27;</span>] = df[<span class="string">&#x27;Income&#x27;</span>] * df[<span class="string">&#x27;Tax %&#x27;</span>]</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/pythonExcel/calculate.png" alt="calculate"></p><h2 id="Simple-Classification-data-analysis"><a href="#Simple-Classification-data-analysis" class="headerlink" title="Simple Classification data analysis"></a>Simple Classification data analysis</h2><p>We classification&#x2F;grouping according to “Test column”, which is “True” and “False”, and calculate the mean value for “Income”, “Tax %” and “Taxes Owned”. </p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;Names.csv&#x27;</span>, header=<span class="literal">None</span>)<span class="comment"># load csv file</span></span><br><span class="line">df_csv.columns = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>,<span class="string">&#x27;Income&#x27;</span>,<span class="string">&#x27;Tax %&#x27;</span>,<span class="string">&#x27;Test Column&#x27;</span>]</span><br><span class="line">df.drop = [<span class="string">&#x27;First&#x27;</span>,<span class="string">&#x27;Last&#x27;</span>]</span><br><span class="line">df.groupby([<span class="string">&#x27;Test Column&#x27;</span>]).mean()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/pythonExcel/classAna.png" alt="classAna"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tutorial </tag>
            
            <tag> Python </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HexoBlog Development Log (Part 2/4)</title>
      <link href="/2022/03/02/Hexo%20Website%20Log%20P2/"/>
      <url>/2022/03/02/Hexo%20Website%20Log%20P2/</url>
      
        <content type="html"><![CDATA[<p>This article documents and explains how my HexoBlog was deployed to Github Pages step by step, from zero to present, welcome for you to reference. Here is <a href="https://becoze.github.io/">My HexoBlog</a>.</p><p>Part 1 - Preparation </p><ul><li>Having a Git account </li><li>Install nodejs and Git</li><li>Install and Initialize Hexo Blog</li></ul><p><strong>Part 2 - Basic configuration and blog deployment</strong></p><ol><li><p>Basic Blog configuration </p></li><li><p>Deploy a blog for the first time with GitPage</p></li><li><p>Install blog theme - “Butterfly”</p></li><li><p>Develop a own picture hosting (PicGo + GitHub)</p></li></ol><p>Part 3 - Blog maintain and GitHub version control </p><ul><li>Use of Hexo command</li><li>Deploy a blog with theme</li><li>Push source file to GitHub</li></ul><p>Part 4 - Advanced configuration based on “Butterfly” theme</p><ul><li>Config blog attributer and Customize blog style with “Butterfly”</li></ul><h2 id="Basic-blog-configuration-config-yml"><a href="#Basic-blog-configuration-config-yml" class="headerlink" title="Basic blog configuration - _config.yml"></a>Basic blog configuration - <code>_config.yml</code></h2><blockquote><p>Please always refer to Hexo official Doc - <a href="https://hexo.io/docs/configuration">EN Hexo - Configuration</a> and <a href="https://hexo.io/zh-tw/docs/configuration">CN Hexo - Configuration</a>. </p></blockquote><ol><li><p>Open <code>.../YourBlogSource/_config.yml</code> with any text&#x2F;code editor (sublime text, Atom and any IDE &amp; code editor).</p></li><li><p><code>#Site</code>: define basic state of the HexoBlog. Every attribute have not fix format.  </p><blockquote><p><a href="https://hexo.io/docs/configuration#Site">Hexo Offical doc - “Site” Configuration</a></p><p><a href="https://hexo.io/zh-tw/docs/configuration#%E7%B6%B2%E7%AB%99">Hexo 官方文檔 - “網站” 配置</a></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Becoze&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> </span><br><span class="line"><span class="attr">description:</span> <span class="string">About</span> <span class="string">me</span> <span class="string">&lt;br&gt;</span> <span class="string">Name</span> <span class="bullet">-</span> <span class="string">Becoze,</span> <span class="string">Nick</span> <span class="string">or</span> <span class="string">Liyuan</span> <span class="string">Liang.</span> <span class="string">&lt;br&gt;</span> <span class="string">Language</span> <span class="bullet">-</span> <span class="string">English,</span> <span class="string">Mandarin,</span> <span class="string">Cantonese.</span> <span class="string">&lt;br&gt;</span> <span class="string">&lt;i</span> <span class="string">class=&#x27;fas</span> <span class="string">fa-map-marker-alt&#x27;&gt;&lt;/i&gt;</span> <span class="string">NSW,</span> <span class="string">Sydney</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">Remain</span> <span class="string">Curious</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Becoze</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">liyuanliang20@outlook.com</span></span><br></pre></td></tr></table></figure><blockquote><p>User of fas icon<code>&lt;i class=&#39;fas fa-map-marker-alt&#39;&gt;&lt;/i&gt;</code>, please refer to <a href="">HexoBlog Development Log (Part 4) - Advanced configuration based on “Butterfly” theme</a></p></blockquote></li><li><p><code>#URL</code>: define global url to the blog after we deploy. </p><blockquote><p><a href="https://hexo.io/docs/configuration#URL">Hexo Offical doc - “URL” Configuration</a></p><p><a href="https://hexo.io/zh-tw/docs/configuration#%E7%B6%B2%E5%9D%80">Hexo 官方文檔 - “網址” 配置</a></p></blockquote><ul><li><code>url</code>: must following the format <code>https://&lt;GitHub-Username&gt;.github.io</code>. <strong>Note: not repo url.</strong></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://becoze.github.io</span></span><br></pre></td></tr></table></figure></li><li><p><code>#Deployment</code>: define deploy method. Re-request of blog GitPage-deployment.</p><ol><li>type: <code>git </code>, fixed</li><li>repo: <code>https://github.com/becoze/becoze.github.io.git</code>, must use your url of the repo.</li><li>branch: <code>main</code>, main or any branch</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span> </span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/becoze/becoze.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="Deploy-a-blog-for-the-first-time-with-GitPage"><a href="#Deploy-a-blog-for-the-first-time-with-GitPage" class="headerlink" title="Deploy a blog for the first time with GitPage"></a>Deploy a blog for the first time with GitPage</h2><blockquote><p><a href="https://hexo.io/docs/github-pages.html#One-command-deployment">Hexo Offical doc - “One-command deployment” GitHub Pages</a></p><p><a href="https://hexo.io/zh-tw/docs/github-pages#%E4%B8%80%E9%8D%B5%E9%83%A8%E5%B1%AC">Hexo 官方文檔 - “一鍵部屬” 在 GitHub Pages 上部署 Hexo</a></p></blockquote><ol><li><p>Install Hexo Blog deployer: <code>npm install hexo-deployer-git --save</code> at blog root directory &#x2F;HexoBlog </p></li><li><p>Deployment: run following using Git Bash at blog root directory &#x2F;HexoBlog </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>Possible error (optional)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Please tell me who you are.</span><br><span class="line"></span><br><span class="line">Run</span><br><span class="line">git config --global user.email “you@example.com”</span><br><span class="line">git config --global user.name “Your Name”</span><br><span class="line"></span><br><span class="line">to set your account’s default identity.</span><br><span class="line">Omit --global to set the identity only in this repository.</span><br><span class="line"></span><br><span class="line">fatal: unable to auto-detect email address (got ...)</span><br><span class="line">error: src refspec HEAD does not match any.</span><br><span class="line">error: failed to push some refs to(your ...github.io)</span><br></pre></td></tr></table></figure><p>​    solution: </p><ul><li>run <code>git config --global user.email &quot;&lt;you@example.com&gt;&quot;</code>, your GitHub email address</li><li>run <code>git config --global user.name &quot;&lt;username&gt;&quot;</code>, your GitHub username</li></ul></li></ol><h2 id="Install-and-apply-blog-theme-“Butterfly”"><a href="#Install-and-apply-blog-theme-“Butterfly”" class="headerlink" title="Install and apply blog theme - “Butterfly”"></a>Install and apply blog theme - “Butterfly”</h2><h2 id="Developed-own-Image-hosting-“PicGo-GitHub”"><a href="#Developed-own-Image-hosting-“PicGo-GitHub”" class="headerlink" title="Developed own Image hosting - “PicGo + GitHub”"></a>Developed own Image hosting - “PicGo + GitHub”</h2><blockquote><p>Tutorial Bilibili <a href="https://www.bilibili.com/video/BV1c44y1C7os/?spm_id_from=333.788">使用picgo+github搭建免费个人图床</a></p></blockquote><ol><li><p>To store able to image. Create a new <strong>Public</strong> repo together a <code>README.md</code> file in GitHub with any name .</p></li><li><p>Obtain token: GitHub setting –&gt; Developer setting  –&gt; Personal access tokens –&gt; Generate new token</p><ul><li>Note: any (e.g. “blogPictureHosting”)</li><li>Expiration: any (recommend 60 days) </li><li>Select Scopes: <ul><li><code>repo</code>: select all, MUST</li><li>all other: remain deselect</li></ul></li></ul></li><li><p><strong>Make sure to copy your personal access token before “Finish”. You won’t be able to see it again!</strong></p></li><li><p>Download PicGo exe. file from GitHub at <a href="https://github.com/Molunerfinn/PicGo/releases">PicGo Release</a> </p><p>​    <em>PicGo-Setup-2.3.0-x64.exe</em> for Windows </p><p>​    <em>PicGo-Setup-2.3.0-x64.dmg</em> for Mac iOS</p></li><li><p>Image hosting setting 图床设置 (Host setting) –&gt; GitHub图床 (GitHub Host setting)</p><ul><li><p>Repo name (设定仓库名): The name of repo just created in step 1 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username/repo-name</span><br></pre></td></tr></table></figure></li><li><p>Branch name (设定分支名): The branch name where to store pictures. (<code>main</code> by default)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">main</span><br></pre></td></tr></table></figure></li><li><p>Token setting (设定Token): the token from step 2</p></li><li><p>Repo path (指定储存路径): the path&#x2F;folder where to store pictures.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img/</span><br></pre></td></tr></table></figure></li><li><p>Customize domain name (设定自定义域名): Remain empty. It can speed up static resource loading if needed.</p></li></ul></li></ol><p>​        6. Start up load image !!!</p>]]></content>
      
      
      <categories>
          
          <category> HexoBlog Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tutorial </tag>
            
            <tag> HexoBlog </tag>
            
            <tag> GitPage </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HexoBlog Development Log (Part 1/4)</title>
      <link href="/2022/03/01/Hexo%20Website%20Log%20P1/"/>
      <url>/2022/03/01/Hexo%20Website%20Log%20P1/</url>
      
        <content type="html"><![CDATA[<p>This article documents and explains how my HexoBlog was deployed to Github Pages step by step, from zero to present, welcome for you to reference. If your are not at my Blog, here is <a href="https://becoze.github.io/">My HexoBlog</a>.</p><h2 id="Chapter"><a href="#Chapter" class="headerlink" title="Chapter:"></a>Chapter:</h2><p><strong>Part 1 - Preparation</strong></p><ol><li><p>Having a Git account and repositories for blog</p></li><li><p>Install nodejs and Git</p></li><li><p>Install and Initialize Hexo Blog</p></li></ol><p>Part 2 - Basic configuration and blog deployment </p><ul><li>Basic Blog configuration </li><li>Deploy a blog for the first time with GitHub</li><li>Install blog theme - “Butterfly”</li><li>Develop a own picture hosting (PicGo + GitHub)</li></ul><p>Part 3 - Blog maintain and GitHub version control </p><ul><li>Use of Hexo command</li><li>Deploy a blog with theme</li><li>Push source file to GitHub</li></ul><p>Part 4 - Advanced configuration on “Butterfly” theme</p><ul><li>Config blog attributer and Customize blog style with “Butterfly”</li></ul><h2 id="Having-a-GitHub-account"><a href="#Having-a-GitHub-account" class="headerlink" title="Having a GitHub account"></a>Having a GitHub account</h2><blockquote><p>Skip this step if have a GitHub account already.</p></blockquote><ol><li><p>Go to <a href="https://github.com/">GitHub</a> and then “sign up”.</p></li><li><p>Sign up with eMail, password and username.</p></li><li><p>Create “New Repo”: Click the green “New”;</p><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/hexoDevLog/devLog_CreateRepo.png" alt="Create Github Repo"></p></li></ol><h2 id="Install-nodejs-and-Git"><a href="#Install-nodejs-and-Git" class="headerlink" title="Install nodejs and Git"></a>Install <strong>nodejs</strong> and <strong>Git</strong></h2><blockquote><p>Link: <a href="https://nodejs.org/en/download/">nodejs download</a> </p></blockquote><ol><li><p>File download: download <strong>.msi</strong> for Window; <strong>.pkg</strong> for macOS.</p></li><li><p>Download setting: keep licking “Next” (remain all default installation) </p></li><li><p>Verify download: run <code>node -v</code> on command prompt. Installation success when it return the version number.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; node -v</span><br><span class="line">v16.14.0</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>Link: <a href="https://git-scm.com/downloads">Git download</a></p></blockquote><ol><li><p>File download: “64-bit Git for Windows Setup”</p></li><li><p>Download setting: keep licking “Next” (remain all default installation) </p></li><li><p>Verify download: run <code>git version</code> on command prompt. Installation success when it return the version number.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; git version</span><br><span class="line">git version 2.35.1.windows.2</span><br></pre></td></tr></table></figure></li></ol><h2 id="Install-and-Initialize-Hexo-blog"><a href="#Install-and-Initialize-Hexo-blog" class="headerlink" title="Install and Initialize Hexo blog"></a>Install and Initialize <strong>Hexo</strong> blog</h2><blockquote><p>Please always refer to Hexo Official doc: <a href="https://hexo.io/docs/">Official Hexo doc EN</a> and <a href="https://hexo.io/zh-tw/docs/">Official Hexo doc CN</a></p><p>Video tutorial CN: </p><ul><li>YouTube: <a href="https://www.youtube.com/watch?v=xvIRGmKWpFM">周三Tech - Hexo教程第二期 安装与使用</a>; </li><li>Bilibili: <a href="https://www.bilibili.com/video/BV1At411y7no?spm_id_from=333.999.0.0">周三Josan - Hexo系列教程第二期 安装与使用 720P</a></li></ul><p>Video tutorial EN: </p><ul><li>YouTube: <a href="https://www.youtube.com/watch?v=LIFvgrRxdt4">Creating a Blog with Hugo and Github in 10 minutes</a></li></ul></blockquote><ol><li><p>Create a new empty folder with any name at the appropriate path, this folder will become your <em>blog source folder</em>. e.g. “HexoBlog”, path <code>D:\HexoBlog</code>.</p></li><li><p>Use of Git terminal: Open the <em>blog source folder</em>, right click select <strong>Git Bash</strong> to enter the terminal.</p><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/hexoDevLog/devLog_GitBash.png" alt="Git at root-file"></p></li><li><p>Install Hexo: at blog root directory &#x2F;HexoBlog </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>Initialize blog: at blog root directory &#x2F;HexoBlog</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init HexoBlog</span><br></pre></td></tr></table></figure></li><li><p>Generate blog file: at blog root directory &#x2F;HexoBlog</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">or</span><br><span class="line">$ hexo gerarate </span><br></pre></td></tr></table></figure></li><li><p>Deploy the HexoBlog <strong>locally</strong>: at blog root directory &#x2F;HexoBlog, </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">or</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></li><li><p>Open <code>http://localhost:4000/</code> with any browser to view the blog locally. (Chrome as example)</p><p><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/hexoDevLog/Chrome%20local%20host.png" alt="Chrome"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> HexoBlog Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tutorial </tag>
            
            <tag> HexoBlog </tag>
            
            <tag> GitPage </tag>
            
            <tag> Node.js </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common Markdown Syntax Guide</title>
      <link href="/2022/02/27/Common%20Markdown%20Syntax/"/>
      <url>/2022/02/27/Common%20Markdown%20Syntax/</url>
      
        <content type="html"><![CDATA[<p>Please always refer to <a href="https://www.markdownguide.org/basic-syntax">MarkdownGuide - Basic Syntax</a> and <a href="https://www.markdownguide.org/hacks">MarkdownGuide - Hacks</a>. </p><h1 id="Heading-level-1"><a href="#Heading-level-1" class="headerlink" title="Heading level 1"></a>Heading level 1</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Heading 1</span><br></pre></td></tr></table></figure><h2 id="Heading-level-2"><a href="#Heading-level-2" class="headerlink" title="Heading level 2"></a>Heading level 2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Heading 2</span><br></pre></td></tr></table></figure><p><strong>Bold</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**Bold**</span><br></pre></td></tr></table></figure><p><em>Italic</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*Italic*</span><br></pre></td></tr></table></figure><p><em><strong>Bold &amp; Italic</strong></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***Bold &amp; Italic***</span><br></pre></td></tr></table></figure><p><del>cross</del></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~cross~~</span><br></pre></td></tr></table></figure><ul><li>Unordered  List 1</li><li>Unordered  List 2</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* Unordered  List 1</span><br><span class="line">* Unordered  List 2</span><br></pre></td></tr></table></figure><ol><li>Ordered  List 1</li><li>Ordered  List 2</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. Ordered  List 1</span><br><span class="line">2. Ordered  List 2</span><br></pre></td></tr></table></figure><p><code>code format</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`code format`</span><br></pre></td></tr></table></figure><hr><p>(Divider)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">or</span><br><span class="line">---</span><br><span class="line">or </span><br><span class="line">___</span><br></pre></td></tr></table></figure><p><a href="https://www.markdownguide.org/hacks">Links</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Links](https://www.markdownguide.org/hacks)</span><br></pre></td></tr></table></figure><p>(code block)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">code block</span><br><span class="line">code block</span><br><span class="line">```</span><br></pre></td></tr></table></figure><blockquote><p>Quotes</p><ul><li>List 1</li><li><strong>List 2 (with bold)</strong></li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Quotes</span><br><span class="line">&gt; * List 1</span><br><span class="line">&gt; * **List 2**</span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/hexoDevLog/hexoLogo.png" width="20%" height="20%"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/hexoDevLog/hexoLogo.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;20%&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">or Markdown</span><br><span class="line">![image](https://raw.githubusercontent.com/becoze/becozePictureHosting/main/blogPost/hexoDevLog/hexoLogo.png.svg.png)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Guide </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
